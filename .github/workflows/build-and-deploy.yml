name: Build, Release and Deploy

on: push

jobs:
  prepare-tags:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.set.outputs.timestamp }}
    steps:
      - name: Create timestamp
        id: set
        run: echo "timestamp=$(TZ=${{ vars.TZ }} date +'%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"

  build:
    needs: prepare-tags
    strategy:
      matrix:
        include:
          - arch: amd64
            os: ubuntu-latest
          # - arch: arm64
          #   os: ubuntu-24.04-arm
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Build and push for ${{ matrix.arch }}
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     push: true
      #     platforms: linux/${{ matrix.arch }}
      #     tags: |
      #       ghcr.io/${{ github.repository }}:latest-${{ matrix.arch }}
      #       ghcr.io/${{ github.repository }}:${{ needs.prepare-tags.outputs.timestamp }}-${{ matrix.arch }}
      #     provenance: false
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

  # merge-manifest:
  #   needs: [prepare-tags, build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to GHCR
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Merge per-arch tags into multi-arch manifests
  #       run: |
  #         REPO=ghcr.io/${{ github.repository }}
  #         TIMESTAMP=${{ needs.prepare-tags.outputs.timestamp }}

  #         docker buildx imagetools create \
  #           --tag "$REPO:latest" \
  #           --tag "$REPO:$TIMESTAMP" \
  #           "$REPO:latest-amd64" \
  #           "$REPO:latest-arm64"

  release-chart:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
  # deploy:
  #   runs-on: ubuntu-latest
  #   # needs: merge-manifest
  #   needs: build
  #   steps:
  #     - name: Deploy to remote server via SSH
  #       uses: appleboy/ssh-action@v1
  #       with:
  #         host: ${{ vars.SSH_VM_HOST }}
  #         username: ${{ vars.SSH_VM_USER }}
  #         key: ${{ secrets.SSH_VM_KEY }}
  #         script: |
  #           TIMESTAMP=${{ needs.prepare-tags.outputs.timestamp }}
            
  #           helm upgrade ${{ github.event.repository.name }} /tmp/helm-charts \
  #             --install \
  #             --set image.tag="$TIMESTAMP" \
  #             --atomic \
  #             --debug
