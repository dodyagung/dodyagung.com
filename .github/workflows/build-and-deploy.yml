name: Build, Release and Deploy

on: push

jobs:
  prepare-tags:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.set.outputs.timestamp }}
    steps:
      - name: Create timestamp
        id: set
        run: echo "timestamp=$(TZ=${{ vars.TZ }} date +'%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"

  # build:
  #   needs: prepare-tags
  #   strategy:
  #     matrix:
  #       include:
  #         - arch: amd64
  #           os: ubuntu-latest
  #         # - arch: arm64
  #         #   os: ubuntu-24.04-arm
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Log in to GHCR
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

      # - name: Build and push for ${{ matrix.arch }}
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     push: true
      #     platforms: linux/${{ matrix.arch }}
      #     tags: |
      #       ghcr.io/${{ github.repository }}:latest-${{ matrix.arch }}
      #       ghcr.io/${{ github.repository }}:${{ needs.prepare-tags.outputs.timestamp }}-${{ matrix.arch }}
      #     provenance: false
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

  # merge-manifest:
  #   needs: [prepare-tags, build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to GHCR
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Merge per-arch tags into multi-arch manifests
  #       run: |
  #         REPO=ghcr.io/${{ github.repository }}
  #         TIMESTAMP=${{ needs.prepare-tags.outputs.timestamp }}

  #         docker buildx imagetools create \
  #           --tag "$REPO:latest" \
  #           --tag "$REPO:$TIMESTAMP" \
  #           "$REPO:latest-amd64" \
  #           "$REPO:latest-arm64"
          
  deploy:
    runs-on: ubuntu-latest
    # needs: merge-manifest
    # needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install helm
        uses: azure/setup-helm@v4

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
        
      - name: Upgraden with helm
        run: |
          TIMESTAMP=${{ needs.prepare-tags.outputs.timestamp }}
            
          helm upgrade ${{ github.event.repository.name }} helm-charts \
            --install \
            --set image.tag="$TIMESTAMP" \
            --atomic \
            --debug
